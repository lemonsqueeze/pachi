# This is rc file for the autotest framework. It is interpreted as a shell
# snippet, so sh/bash evaluation rules apply.

# Here, we define some general execution environment configuration for
# autotest, the players that will get paired, and then actual pairings
# to perform. autotest clients will repeatedly pick a random pairing
# from the defined ones, play a game and record the result.

########################################################################################
# General parameters

# twogtp path
# We need the gogui twogtp variant (the one that takes -black, not --black as parameter).
# If you want handicap support you need gogui-1.4.10:
#   https://github.com/lemonsqueeze/gogui/releases
# (or patch gogui: http://pasky.or.cz/dev/pachi/gogui-handicap.diff)
twogtp_path="/path/to/gogui-1.4.10/bin/gogui-twogtp"


########################################################################################
# Players

# The player specification is later eval'd during the pairing. You can use
# $1, $2, ... placeholders within the specification to substitute various
# parameters at the pairing time. The number parameter after player command
# specification specifies how many parameters the specification takes.

# Note: Can't use special characters like: '.' '-' ',' ':' in player names:
# Trying to do so will give an error like:
#     Loading rc file...
#     bin/autotest-worker: line 19: <bad player name>_spec=<bad player command>: No such file or directory
#     *** WORKER FAILED ***
# Use '_' instead.

# Warning! If you change player definition, you WILL NOT be able to determine
# what definition your historical results used. Once you define a player of
# some id, it's bad idea to tweak the definition in any way.


########################################################################################
# GnuGo player, level 10

# Probably best avoided if possible: doesn't resign lost games (wastes lots
# of resources). Also games tend to be very noisy, have to play thousands of
# them to get a good estimate. Better play a few games with a strong opponent.
#player gnugo10 "/usr/games/gnugo --mode gtp --chinese-rules --capture-all-dead --level 10" 0


########################################################################################
# Pachi players

# To speed up testing:
#   - Test on 15x15 instead of 19x19
#   - Resign early (resign_threshold=0.29, below 30% is almost sure loss)
#   - Make custom build for target boardsize
#   - Run multiple single threaded games rather than one multi-threaded game
#     on multi-core machines.

# Our reference player:
# Pachi 12.80 (dcnn, 10k playouts, multithreaded)
player pachi1280		"runpachi ~/build/12.80/pachi -t =10000" 0


# Version we want to test: Pachi build in ~/build/master.
# Pachi (dcnn, 10k playouts, multithreaded)
player pachi			"runpachi ~/build/master/pachi -t =10000" 0

# Pachi (nodcnn, 10k playouts, multithreaded)
player pachi_nodcnn		"runpachi ~/build/master/pachi --nodcnn -t =10000" 0

# Pachi (nodcnn, 10k playouts, single-threaded)
#player pachi_nodcnn		"runpachi ~/build/master/pachi --nodcnn -t =10000 threads=1" 0

# Can also test different pachi versions from current directory:
# We substitute particular revision and specific parameters in the pairings.
# ${2:+,$2} means that if second parameter is passed, it will be inserted here,
# comma-prepended, otherwise nothing will be inserted.
#player zamafmoggy5k './pachi-$1 -t =5000 pass_all_alive,policy=ucb1amaf,playout=moggy${2:+,$2}' 2


########################################################################################
# Pairings

# Pairing syntax:
#   pairing BOARDSIZE KOMI BLACK PLAYER1 PLAYER1ARGS PLAYER2 PLAYER2ARGS
# 
# BOARDSIZE: 9, 19, or whatever flavor you fancy...
# KOMI: 7.5, 0.5, ... OR h2, h6, ... (handicap amount, komi is forced to 0.5)
# BLACK: 'a' - black is chosen randomly, useful only if komi is 7.5
#	 '1' - black is PLAYER1,  '2' - black is PLAYER2
# PLAYER: Name of the player as defined above.
# PLAYERARGS: Parameters for the player, substituted for $1, $2, ...
#             Parameters must not contain whitespace.
#
# Winrates are always stored from PLAYER2 perspective, no matter
# what the player colors are - we assume that PLAYER1 is your reference
# player while PLAYER2 varies based on the particular configuration you
# want to test.
#
# You will be editing this all the time. :)


# self-play:       19x19 even game  (second player is black)
#pairing 19  7.5 2 pachi1280  pachi


# dcnn vs nodcnn:  15x15 H4
#pairing 15  h4  2 pachi1280  pachi_nodcnn


# gnugo vs pachi,  15x15 reverse komi (pachi is white)
#pairing 15 -7.5 1 gnugo10  pachi_nodcnn

