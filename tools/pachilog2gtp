#!/usr/bin/perl
# usage: pachilog2gtp pachi.log
# reconstruct gtp stream from pachi log

open(IN, "< $ARGV[0]") || die "couldn't open '$ARGV[0]'";

my $abcd = "abcdefghjklmnopqrstuvwxyz";

sub coord2gtp
{
    my ($x, $y) = @_;
    $y += 0;
    return substr($abcd, $x-1, 1) . $y;
}

# Parse board diagram line and set $size
# Returns ($y, $stones, $post) or () if doesn't match
my $size = 0;
sub parse_board_line
{
    my ($line) = @_;
    $line =~ s/Â·/./g;   # For color boards ...
    if ($line !~ m/^ *([0-9]+) [ |]+(([.OX][ )])+)[ |]+/)  {  return ();  }

    my ($y, $stones, $post) = ($1,  $2, $2);
    $stones =~ s/[ )]//g;
    $post   =~ s/[.OX]//g;
    
    if (!$size)  {  $size = length($stones);  }
    if ($size != length($stones))  {  die "Error: Line doesn't match boardsize $size:\n$line\n";  }
    return ($y, $stones, $post);
}


# Get last move from board diagram
# returns "pass" for pass or resign ...
sub get_board_print_last_move
{
    $size = 0;		# Reset board size
    my $seen_board = 0;

    my $last_move = "pass";
    while (my $s = <IN>) {
	if ($s =~ m/^IN: /)  {  die "fixme, handle new gtp command inside genmove";  }

	my @t = parse_board_line($s);
	if (!@t) {   if ($seen_board) {  return $last_move;  } else {  next;  }   }

	$seen_board = 1;
	my ($y, $stones, $post) = @t;
	my @post = split("", $post);	
	for (my $i = 0; $i < @post; $i++) {
	    if ($post[$i] eq ")") {  $last_move = coord2gtp($i+1, $y);  }
	}
    }
    die "shouldn't happen";
}

# Find generated move
sub get_genmove_coord
{
    # Skip first board diagram
    my $s = <IN>;
    ($s =~ m/^Move:/) || die("shouldn't happen, first line after genmove not board diagram.");
    
    while ($s = <IN>) {
	if ($s =~ m/<resign>/)  {  return "resign";  }
	if ($s =~ m/^Move:/)    {  return get_board_print_last_move();  }
	if ($s =~ m/^IN: /)     {  die "fixme, handle new gtp command inside genmove";  }
    }
    die "shouldn't happen";
}

while (my $str = <IN>) {
    # Preserve game start timestamps, turn into comment
    # Ex: 'Jul 04 16:05:37 2020'
    if ($str =~ m/^([a-z]{3} \d\d \d\d:\d\d:\d\d.*)$/i) {  print "echo $1\n";  }
    
    if ($str !~ m/^IN: (.*)/) {  next;  }

    # Found gtp command
    $str = $1;
    $str =~ s|\r||g;

    # Turn genmove commands into play commands
    if ($str =~ m/^genmove ([bw])/i) {
	my $color = lc($1);
	my $coord = get_genmove_coord();
	($coord ne "") || die "shouldn't happen";
	if ($coord ne "resign") {
	    printf("play %s %s\n", $color, $coord);
	}
	next;
    }

    # Print gtp command
    print "$str\n";
}
